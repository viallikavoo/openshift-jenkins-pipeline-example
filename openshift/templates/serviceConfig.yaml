apiVersion: v1
kind: Template
labels:
  template: serviceConfig.yaml
metadata:
  name: ${SERVICE_NAME}
  annotations:
    description: The primary BuildConfig template for Jenkins to Build Images
    tags: ${SERVICE_NAME}

objects:

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: "${DOCKER_IMAGE_NAME}"
  spec:
    dockerImageRepository: "docker-registry.default.svc:5000/${SERVICE_NAME}-${ENVIRONMENT}"
    tags:
      - name: latest

- apiVersion: v1
  kind: Service
  metadata:
    name: "${SERVICE_NAME}"
  spec:
    selector:
      deploymentconfig: "${SERVICE_NAME}"
    type: ClusterIP
    sessionAffinity: None
    ports:
      - port: "${{OPENSHIFT_SERVICE_PORT}}"
        protocol: TCP
        targetPort: "${{APPLICATION_PORT}}"

- apiVersion: v1
  kind: Route
  metadata:
    name: "${SERVICE_NAME}"
  spec:
    to:
      kind: Service
      name: "${SERVICE_NAME}"

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${SERVICE_NAME}"
  spec:
    replicas: "${{MIN_REPLICAS}}"
    selector:
      deploymentconfig: "${SERVICE_NAME}"
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 5
        intervalSeconds: 1
        timeoutSeconds: 240
        maxSurge: "25%"
        maxUnavailable: "0%"
    template:
      metadata:
        labels:
          deploymentconfig: "${SERVICE_NAME}"
      spec:
        serviceAccountName: "${SERVICE_NAME}"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        containers:
          - name: "${SERVICE_NAME}"
            image: "${DOCKER_IMAGE_NAME}"
            imagePullPolicy: Always
            resources:
              requests:
                cpu: "${CPU_REQUEST}"
                memory: "${MEMORY_REQUEST}"
              limits:
                cpu: "${CPU_LIMIT}"
                memory: "${MEMORY_LIMIT}"
            ports:
              - containerPort: "${{APPLICATION_PORT}}"
                protocol: TCP
            readinessProbe:
              httpGet:
                path: "${HEALTH_CHECK_PATH}"
                port: "${{APPLICATION_PORT}}"
              initialDelaySeconds: "${{READINESS_INIT_DELAY_SEC}}"
              timeoutSeconds: 3
            livenessProbe:
              httpGet:
                path: "${HEALTH_CHECK_PATH}"
                port: "${{APPLICATION_PORT}}"
              initialDelaySeconds: "${{LIVENESS_INIT_DELAY_SEC}}"
              timeoutSeconds: 3
              periodSeconds: 180
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - "${SERVICE_NAME}"
          from:
            kind: ImageStreamTag
            name: "${DOCKER_IMAGE_NAME}:latest"
      - type: ConfigChange

- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    name: "${SERVICE_NAME}"
  spec:
    scaleTargetRef:
      kind: DeploymentConfig
      name: "${SERVICE_NAME}"
    minReplicas: "${{MIN_REPLICAS}}"
    maxReplicas: "${{MAX_REPLICAS}}"
    targetCPUUtilizationPercentage: 70

parameters:

  # Global Parameters


  - name: DOCKER_REGISTRY
    description: The docker registry server address to associate with the image stream (either 'registry.danskenet.com' or '455210724252.dkr.ecr.eu-west-1.amazonaws.com')
    displayName: Docker registry server address


  # params-common.json

  - name: ENVIRONMENT
    description: ENV name as test,syst,prod"
    displayName: ENVIRONMENT
    required: true

  - name: SERVICE_NAME
    description: Full service name"
    displayName: Full service name
    required: true


  - name: APPLICATION_PORT
    description: The port in which the application is listening
    displayName: Application port
    required: true

  - name: OPENSHIFT_SERVICE_PORT
    description: The port the OpenShift service listens on
    displayName: Openshift service port
    required: true

  - name: HEALTH_CHECK_PATH
    description: The health check path used in the application; must be a GET request responding with 200 OK
    displayName: Health check path
    required: true

  - name: READINESS_INIT_DELAY_SEC
    description: The number of seconds to wait before checking pod readiness
    displayName: Pod readiness check seconds
    required: true

  - name: LIVENESS_INIT_DELAY_SEC
    description: The number of seconds to wait before checking pod liveness
    displayName: Pod liveness check seconds
    required: true

  # params-[environment].json


  - name: DOCKER_IMAGE_NAME
    description: The name of the image in the registry
    displayName: Docker image name
    required: true

  - name: MIN_REPLICAS
    description: The number of min replicas to use
    displayName: Minimum number of replicas
    required: true

  - name: MAX_REPLICAS
    description: The number of mas replicas to use
    displayName: Maximum number of replicas
    required: true

  - name: CPU_REQUEST
    description: Maximum amount of CPU the container can use.
    displayName: CPU Request
    required: true

  - name: MEMORY_REQUEST
    description: Maximum amount of memory the container can use.
    displayName: Memory Request
    required: true

  - name: CPU_LIMIT
    description: Maximum amount of CPU the container can use.
    displayName: CPU Limit
    required: true

  - name: MEMORY_LIMIT
    description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    required: true
