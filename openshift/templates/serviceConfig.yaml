---
apiVersion: "template.openshift.io/v1"
kind: "Templates"
labels:
  template: ${SERVICE_NAME}.yaml
metadata:
  name: ${SERVICE_NAME}
  annotations:
    description: The primary service template for deployments
    tags: ${SERVICE_NAME}
objects:
  -
    apiVersion: v1
    kind: ImageStream
    metadata:
      name: "${DOCKER_IMAGE_NAME}"
    spec:
      dockerImageRepository: "docker-registry.default.svc:5000/${SERVICE_NAME}-${ENVIRONMENT}"
      tags:
        -
          name: latest
  -
    apiVersion: v1
    kind: Service
    metadata:
      name: "${SERVICE_NAME}"
    spec:
      ports:
        -
          port: "${{OPENSHIFT_SERVICE_PORT}}"
          protocol: TCP
          targetPort: "${{APPLICATION_PORT}}"
      selector:
        deploymentconfig: "${SERVICE_NAME}"
      sessionAffinity: None
      type: ClusterIP
  -
    apiVersion: v1
    kind: Route
    metadata:
      name: "${SERVICE_NAME}"
    spec:
      to:
        kind: Service
        name: "${SERVICE_NAME}"
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: "${SERVICE_NAME}"
    spec:
      replicas: "${{MIN_REPLICAS}}"
      selector:
        deploymentconfig: "${SERVICE_NAME}"
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 0%
          timeoutSeconds: 240
          updatePeriodSeconds: 5
        type: Rolling
      template:
        metadata:
          labels:
            deploymentconfig: "${SERVICE_NAME}"
        spec:
          containers:
            -
              image: "${DOCKER_IMAGE_NAME}"
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: "${HEALTH_CHECK_PATH}"
                  port: "${{APPLICATION_PORT}}"
                initialDelaySeconds: "${{LIVENESS_INIT_DELAY_SEC}}"
                periodSeconds: 180
                timeoutSeconds: 3
              name: "${SERVICE_NAME}"
              ports:
                -
                  containerPort: "${{APPLICATION_PORT}}"
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: "${HEALTH_CHECK_PATH}"
                  port: "${{APPLICATION_PORT}}"
                initialDelaySeconds: "${{READINESS_INIT_DELAY_SEC}}"
                timeoutSeconds: 3
              resources:
                limits:
                  cpu: "${CPU_LIMIT}"
                  memory: "${MEMORY_LIMIT}"
                requests:
                  cpu: "${CPU_REQUEST}"
                  memory: "${MEMORY_REQUEST}"
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccountName: "${SERVICE_NAME}"
          terminationGracePeriodSeconds: 30
      triggers:
        -
          imageChangeParams:
            automatic: true
            containerNames:
              - "${SERVICE_NAME}"
            from:
              kind: ImageStreamTag
              name: "${DOCKER_IMAGE_NAME}:latest"
          type: ImageChange
        -
          type: ConfigChange
  -
    apiVersion: autoscaling/v1
    kind: HorizontalPodAutoscaler
    metadata:
      name: "${SERVICE_NAME}"
    spec:
      maxReplicas: "${{MAX_REPLICAS}}"
      minReplicas: "${{MIN_REPLICAS}}"
      scaleTargetRef:
        kind: DeploymentConfig
        name: "${SERVICE_NAME}"
      targetCPUUtilizationPercentage: 70
parameters:
  -
    description: "The docker registry server address to associate with the image stream (either 'registry.danskenet.com' or '455210724252.dkr.ecr.eu-west-1.amazonaws.com')"
    displayName: "Docker registry server address"
    name: DOCKER_REGISTRY
  -
    description: "ENV name as test,syst,prod\""
    displayName: ENVIRONMENT
    name: ENVIRONMENT
    required: true
  -
    description: "Full service name"
    displayName: "Full service name"
    name: SERVICE_NAME
    required: true
  -
    description: "The port in which the application is listening"
    displayName: "Application port"
    name: APPLICATION_PORT
    required: true
  -
    description: "The port the OpenShift service listens on"
    displayName: "Openshift service port"
    name: OPENSHIFT_SERVICE_PORT
    required: true
  -
    description: "The health check path used in the application; must be a GET request responding with 200 OK"
    displayName: "Health check path"
    name: HEALTH_CHECK_PATH
    required: true
  -
    description: "The number of seconds to wait before checking pod readiness"
    displayName: "Pod readiness check seconds"
    name: READINESS_INIT_DELAY_SEC
    required: true
  -
    description: "The number of seconds to wait before checking pod liveness"
    displayName: "Pod liveness check seconds"
    name: LIVENESS_INIT_DELAY_SEC
    required: true
  -
    description: "The name of the image in the registry"
    displayName: "Docker image name"
    name: DOCKER_IMAGE_NAME
    required: true
  -
    description: "The number of min replicas to use"
    displayName: "Minimum number of replicas"
    name: MIN_REPLICAS
    required: true
  -
    description: "The number of mas replicas to use"
    displayName: "Maximum number of replicas"
    name: MAX_REPLICAS
    required: true
  -
    description: "Maximum amount of CPU the container can use."
    displayName: "CPU Request"
    name: CPU_REQUEST
    required: true
  -
    description: "Maximum amount of memory the container can use."
    displayName: "Memory Request"
    name: MEMORY_REQUEST
    required: true
  -
    description: "Maximum amount of CPU the container can use."
    displayName: "CPU Limit"
    name: CPU_LIMIT
    required: true
  -
    description: "Maximum amount of memory the container can use."
    displayName: "Memory Limit"
    name: MEMORY_LIMIT
    required: true
